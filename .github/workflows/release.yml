name: '🎁 Release'

on:
  workflow_dispatch:
    inputs:
      use-testpypi:
        required: false
        default: true
        type: boolean

      job-id:
        default: 'all'
        type: choice
        options: ['all', 'publish-package', 'publish-docs']

      dry-run:
        required: false
        default: true
        type: boolean

  release:
    types: [published]

jobs:
  config-prep:
    runs-on: ubuntu-latest
    outputs:
      publish-package: ${{ github.event_name != 'workflow_dispatch' || contains(fromJson('["all", "publish-package"]'), inputs.job-id) }}
      publish-docs: ${{ github.event_name != 'workflow_dispatch' || contains(fromJson('["all", "publish-docs"]'), inputs.job-id) }}
      dry-run: ${{ github.event_name == 'workflow_dispatch' && inputs.dry-run }}
      use-testpypi: ${{ steps.post-process.outputs.use-testpypi }}
      enable-docs: ${{ fromJson(steps.read-file.outputs.content).enable-docs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read YAML file
        id: read-file
        uses: ./.github/actions/read-yaml
        with:
          path: .github/settings/release-config.yml
          filter: '.default'

      - name: Post process
        id: post-process
        shell: bash
        run: |
          if [[ ${{ github.event_name == 'workflow_dispatch' }} == true ]]; then
            echo "use-testpypi=${{ inputs.use-testpypi }}" >> $GITHUB_OUTPUT
          else
            echo "use-testpypi=${{ fromJson(steps.read-file.outputs.content).use-testpypi }}" >> $GITHUB_OUTPUT
          fi

  publish-package:
    needs: config-prep
    if: needs.config-prep.outputs.publish-package == 'true'
    uses: ./.github/workflows/pypi-upload.yml
    with:
      use-testpypi: ${{ fromJson(needs.config-prep.outputs.use-testpypi) }}
      dry-run: ${{ fromJson(needs.config-prep.outputs.dry-run) }}
    secrets:
      pypi-api-token: ${{ fromJson(needs.config-prep.outputs.use-testpypi) &&
                          secrets.TESTPYPI_API_TOKEN || secrets.PYPI_API_TOKEN }}

  publish-docs:
    needs: config-prep
    if: needs.config-prep.outputs.publish-docs == 'true' &&
        needs.config-prep.outputs.enable-docs == 'true'
    uses: ./.github/workflows/docs.yml
    with:
      dry-run: ${{ fromJson(needs.config-prep.outputs.dry-run) }}

  report:
    if: ${{ ! failure() }}
    needs: [config-prep, publish-package, publish-docs]
    runs-on: ubuntu-latest
    steps:
      - name: Generate a summary
        uses: actions/github-script@v6
        with:
          script: |
            const name_to_url = new Map();
            if ('${{ needs.publish-package.outputs.page-url }}' != '') {
              const name = ${{ fromJson(needs.config-prep.outputs.use-testpypi) }} ? 'TestPyPI' : 'PyPI';
              name_to_url.set(name, '${{ needs.publish-package.outputs.page-url }}');
            }
            if ('${{ needs.publish-docs.outputs.page-url }}' != '') {
              name_to_url.set('GitHub Pages', '${{ needs.publish-docs.outputs.page-url }}');
            }

            const list = [...name_to_url].map(([name, url]) =>
              `<a href="${url}">${name}</a>`
            );
            const title = list.length ? 'Links to published content' : 'Nothing has been published';

            await core.summary
              .addHeading(title)
              .addList(list)
              .write()
