name: 'ðŸ¤– Bot: Issues'

on:
  issues:
    types: [opened]

jobs:
  reply-to:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        timeout-minutes: 3
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Hi, @${{ github.event.issue.user.login }} ðŸ‘‹\nThanks for reporting the issue!`
            });

  apply-label:
    needs: [reply-to]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        timeout-minutes: 3
        with:
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            if (issue.data.labels.length > 0) {
              return;
            }
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['needs triage']
            });

  assign-assignee:
    needs: [reply-to]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        timeout-minutes: 3
        with:
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            if (issue.data.assignees.length > 0) {
              return;
            }
            let assignee = `${{ github.event.issue.user.login }}`;
            try {
              const ret = await github.rest.issues.checkUserCanBeAssigned({
                owner: context.repo.owner,
                repo: context.repo.repo,
                assignee: assignee
              });
            } catch (e) {
              assignee = `${{ github.repository_owner }}`;
            }
            github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              assignees: assignee
            });
